{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"num",
				"num_class"
			],
			[
				"query",
				"query_business"
			],
			[
				"subset",
				"subset_count"
			],
			[
				"result",
				"results"
			],
			[
				"CUR",
				"cursor"
			],
			[
				"re",
				"result_log"
			],
			[
				"path",
				"path"
			],
			[
				"lo",
				"logger"
			],
			[
				"load",
				"load_label"
			],
			[
				"log",
				"log_path"
			],
			[
				"model",
				"model_name"
			],
			[
				"row",
				"row_id"
			],
			[
				"sub",
				"subset_count"
			],
			[
				"quer",
				"query_review_text"
			],
			[
				"con",
				"Connect"
			],
			[
				"count",
				"count_sent"
			],
			[
				"c",
				"count"
			],
			[
				"pre",
				"pred_length"
			],
			[
				"pred",
				"pred_cat"
			],
			[
				"o",
				"other_feaeture"
			],
			[
				"n",
				"ngram"
			],
			[
				"que",
				"ques_token"
			],
			[
				"question",
				"question_classifier"
			],
			[
				"extra",
				"extract_head_word"
			],
			[
				"Sv",
				"SVC"
			],
			[
				"patt",
				"pattern"
			],
			[
				"qu",
				"ques_token"
			],
			[
				"extrac_",
				"extract_head_word"
			],
			[
				"pos",
				"pos_tag"
			],
			[
				"feau",
				"feature_list"
			],
			[
				"feat",
				"feature_space"
			],
			[
				"feature",
				"feature_list"
			],
			[
				"fea",
				"feature_space"
			],
			[
				"pat",
				"pattern_rt"
			],
			[
				"pa",
				"pattern_rt"
			],
			[
				"patter",
				"pattern_rt"
			],
			[
				"q",
				"ques"
			],
			[
				"ps",
				"pos_tag"
			],
			[
				"to",
				"toarray"
			],
			[
				"a",
				"append"
			],
			[
				"y_t",
				"y_test"
			],
			[
				"X_t",
				"X_test"
			],
			[
				"cl",
				"clf"
			],
			[
				"fit",
				"fit_model"
			],
			[
				"random",
				"RandomForestClassifier"
			],
			[
				"num_ad",
				"num_adverb"
			],
			[
				"ext",
				"extend"
			],
			[
				"json",
				"json_file"
			],
			[
				"word",
				"word_tokenize"
			],
			[
				"r",
				"rt_list"
			],
			[
				"wh",
				"wh_list"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"cat",
				"cat_dict"
			],
			[
				"sh",
				"shape"
			],
			[
				"W",
				"W_i"
			],
			[
				"l",
				"lstm"
			],
			[
				"c_t",
				"c_t_"
			],
			[
				"b",
				"b_i"
			],
			[
				"U",
				"U_i"
			],
			[
				"in",
				"in_size"
			],
			[
				"out",
				"out_size"
			],
			[
				"exp",
				"expected_sigmoid_x"
			],
			[
				"Xm",
				"XManFunctions"
			],
			[
				"mb_t",
				"mb_test"
			],
			[
				"mb",
				"mb_train"
			],
			[
				"p",
				"param"
			],
			[
				"ran",
				"rname"
			],
			[
				"x",
				"x1"
			],
			[
				"value",
				"value_dict"
			],
			[
				"min",
				"min_loss"
			],
			[
				"input",
				"input_size"
			],
			[
				"on",
				"ones"
			],
			[
				"train",
				"train_loss"
			],
			[
				"o1",
				"o1_"
			],
			[
				"regi",
				"registerDefinedByOperator"
			],
			[
				"B",
				"b_1"
			],
			[
				"delta",
				"delta_relu_y"
			],
			[
				"help",
				"relu_bp_helper"
			],
			[
				"relu",
				"relu_bp_helper"
			],
			[
				"del",
				"delta"
			],
			[
				"inpu",
				"inputDict"
			],
			[
				"xm",
				"xm"
			],
			[
				"layer",
				"layer_sizes"
			],
			[
				"la",
				"layer_sizes"
			],
			[
				"add",
				"add_xW_b"
			],
			[
				"mul",
				"mul_x_W"
			],
			[
				"deal",
				"delta_crossEnt_softMax_x_z"
			],
			[
				"epx",
				"expected_crossEnt_softMax_x_z"
			],
			[
				"Delta",
				"delta_crossEnt_softMax_x_z"
			],
			[
				"expcted",
				"expected_crossEnt_softMax_x_z"
			],
			[
				"expecte",
				"expected_crossEnt_softMax_x_z"
			],
			[
				"expe",
				"expected_crossEnt_softMax_x_z"
			],
			[
				"expted",
				"expected_crossEnt_softMax_x_z"
			],
			[
				"delt",
				"delta_crossEnt_softMax_x_z"
			],
			[
				"score",
				"score_max"
			],
			[
				"soc",
				"score_answer"
			],
			[
				"ans",
				"answerFlag"
			],
			[
				"Ran",
				"RankedAnswer"
			],
			[
				"data",
				"dataset"
			],
			[
				"rank",
				"RankedAnswer"
			],
			[
				"lab",
				"lable"
			],
			[
				"j",
				"j_list"
			],
			[
				"tok",
				"token"
			],
			[
				"lam",
				"lambda_"
			],
			[
				"y",
				"y_to_i"
			],
			[
				"V",
				"V"
			],
			[
				"A",
				"A"
			],
			[
				"y_",
				"y_list"
			],
			[
				"k",
				"key"
			],
			[
				"token",
				"token"
			],
			[
				"has",
				"has_key"
			],
			[
				"lable",
				"lable_dict"
			],
			[
				"dest",
				"dest_tmp"
			],
			[
				"src",
				"src_tmp"
			],
			[
				"id",
				"id_list"
			],
			[
				"Id",
				"ID_company"
			],
			[
				"j2_with",
				"j2_with_num"
			],
			[
				"tmp",
				"tmp_socore"
			],
			[
				"class",
				"class_label"
			],
			[
				"redu",
				"ReduceToSum"
			],
			[
				"cla",
				"class_label"
			],
			[
				"j2",
				"j2_with_unique"
			],
			[
				"Y_w",
				"Y_W_count"
			],
			[
				"doc",
				"docid"
			],
			[
				"Re",
				"ReduceToCount"
			],
			[
				"Y_",
				"Y_token"
			],
			[
				"reduc",
				"reducingTo"
			],
			[
				"tupl",
				"tuple2"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 347.0,
		"last_filter": "inde",
		"selected_items":
		[
			[
				"inde",
				"Indentation: Reindent Lines"
			],
			[
				"convert",
				"Indentation: Convert to Spaces"
			],
			[
				"doc",
				"DocBlockr: Decorate line comment"
			],
			[
				"space",
				"Indentation: Convert to Spaces"
			],
			[
				"comment",
				"Toggle Comment"
			],
			[
				"block",
				"DocBlockr: Reparse comment block"
			],
			[
				"comm",
				"DocBlockr: Decorate line comment"
			],
			[
				"dock",
				"DocBlockr: Decorate line comment"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"goto",
				"Goto Documentation"
			],
			[
				"package control",
				"Package Control: Install Package"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"",
				"Indentation: Reindent Lines"
			],
			[
				"htmlW",
				"HTML: Wrap Selection With Tag"
			],
			[
				"HTML",
				"HTML: Encode Special Characters"
			],
			[
				"h",
				"HTML: Encode Special Characters"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 330.0,
		"history":
		[
			"docblockr",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/yuyanzhang/Desktop/CMU/10605/yelp/10805-YelpChallenge/architecture/pipeline",
		"/Users/yuyanzhang/Desktop/CMU/10605/yelp/10805-YelpChallenge/dataset/review.json",
		"/Users/yuyanzhang/Desktop/CMU/10605/yelp/10805-YelpChallenge/yelp_db_local.sql",
		"/Users/yuyanzhang/Desktop/CMU/10605/yelp/10805-YelpChallenge/architecture/ConnectToSQLServer.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/yelp/10805-YelpChallenge/architecture/pipeline.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/input/BioASQ-trainingDataset5b.json",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/submission.json",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/question_category.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/question_classifier.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/singletonConceptId.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/Concatenation.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/pipeline.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/question_classifier_prep.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/singletonConceptId.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/Expander.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/pipeline.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/logging.ini",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/SnomedctExpander.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/Expander.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/bioasqArchitecture/Authentication.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/Concatenation.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/question_category.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/question_classifier.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/Tiler.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2_yuyanz1_submission/Pipeline.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/input/BioASQ-trainingDataset5b.json",
		"/Users/yuyanzhang/Desktop/CMU/10605/yelp/10805-YelpChallenge/labels.csv",
		"/Users/yuyanzhang/Desktop/CMU/10605/yelp/10805-YelpChallenge/label_50000.csv",
		"/Users/yuyanzhang/Desktop/CMU/11791/Project/BioasqArchitecture-master/submission_with_sent_classification_sent_based.json",
		"/Users/yuyanzhang/Desktop/CMU/10605/yelp/10805-YelpChallenge/shrink_dist2.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw4/starter_code/xman.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw4/starter_code/autograd.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw4/starter_code/mlp.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw5/starter_code/lstm.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw5/starter_code/functions.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw4/starter_code/functions.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw4/starter_code/utils.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2/AnswerCandidate.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2/IndependentRanker.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2/QuestionCoverageRanker.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2/AnswerCoverageRanker.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2/JaccardRanker.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2/SetRanker.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2/CompositeRanker.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2/Pipeline.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2/DataElement.py",
		"/Users/yuyanzhang/Desktop/CMU/11791/hw2/RankedAnswer.py",
		"/Users/yuyanzhang/Downloads/phaseB_4b_04.json",
		"/Users/yuyanzhang/Desktop/umls_out.json",
		"/Users/yuyanzhang/Desktop/gold.txt",
		"/Users/yuyanzhang/Desktop/gen.txt",
		"/Users/yuyanzhang/Desktop/out.json",
		"/Users/yuyanzhang/Desktop/snomed_out.json",
		"/Users/yuyanzhang/Desktop/help.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw3/LR_v1.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw3/LR.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw3/dbpedia_17fall_hw3/abstract.tiny.train",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw3/dbpedia_17fall_hw3/abstract.small.train",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw3/dbpedia_17fall_hw3/abstract.tiny.test",
		"/Users/yuyanzhang/Desktop/dataset/user.json",
		"/Users/yuyanzhang/Desktop/dataset/business.json",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw2/nb.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw2/Report/union.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw2/Report/test",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw2/dbpedia_17fall/dbpedia_15fall/NBTest.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/hw1b_submit_nodict/reducer.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/hw1b_submit_nodict/mapper.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw2/nb_copy.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw2/accuracy.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw2/dbpedia_17fall/dbpedia_15fall/abstract.tiny.test",
		"/Users/yuyanzhang/Desktop/CMU/10601/hw3/handout/python/NB.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/NBTest.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/NBTrain.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1/NBTest.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1/NBTrain.py",
		"/Users/yuyanzhang/Downloads/lsd-latest/lsd",
		"/Users/yuyanzhang/Desktop/CMU/10601/hw3/handout/data/XTrainsmall.csv",
		"/Users/yuyanzhang/Desktop/handout/python/NB.py",
		"/Users/yuyanzhang/Desktop/handout/data/vocabulary.csv",
		"/Users/yuyanzhang/Desktop/handout/data/yTrainsmall.csv",
		"/Users/yuyanzhang/Desktop/handout/data/XTrain.csv",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/abstract.tiny.train",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/mapper.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/reducer2.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/reducer.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/hw1b_submit/reducer.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/hw1b_submit/mapper.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1b/script.py",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1/RCV1.small_test.txt",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1/RCV1/RCV1.very_small_test.txt",
		"/Users/yuyanzhang/Desktop/CMU/10605/hw1/RCV1/RCV1.very_small.txt",
		"/Users/yuyanzhang/Desktop/test.c",
		"/private/var/folders/0q/34hmt0w50cld4x7nblh4rvwc0000gn/T/cde7bb42-827e-4cb6-95d4-dfede6fae7b8/afs/andrew.cmu.edu/usr18/yuyanz1/private/15513/proxylab-handout/driver.sh",
		"/Users/yuyanzhang/Desktop/proxylab-handout/proxy.c",
		"/Users/yuyanzhang/Desktop/proxylab-handout/cache.h",
		"/Users/yuyanzhang/Desktop/proxylab-handout/cache.c",
		"/Users/yuyanzhang/Desktop/malloclab-handin/mm.c",
		"/Users/yuyanzhang/Desktop/mm.c",
		"/Users/yuyanzhang/Desktop/mm-seglist.c",
		"/Users/yuyanzhang/Desktop/f.c",
		"/Users/yuyanzhang/Desktop/moss.pl",
		"/Users/yuyanzhang/Desktop/malloclabcheckpoint-handout/memlib.c",
		"/Users/yuyanzhang/Desktop/malloclabcheckpoint-handout/mm.c",
		"/Users/yuyanzhang/Desktop/malloclabcheckpoint-handout/mm-naive.c",
		"/Users/yuyanzhang/Desktop/malloclabcheckpoint-handout/mm-baseline.c",
		"/Users/yuyanzhang/Desktop/handin/tsh.c",
		"/Users/yuyanzhang/Desktop/tshlab-handout 2/tsh.c",
		"/Users/yuyanzhang/Desktop/tsh_g.c",
		"/Users/yuyanzhang/Desktop/yuyanz1@andrew.cmu.edu_cachelab_1_handin/trans.c",
		"/Users/yuyanzhang/Desktop/yuyanz1@andrew.cmu.edu_cachelab_1_handin/csim.c",
		"/Users/yuyanzhang/Desktop/csim.c",
		"/Users/yuyanzhang/Desktop/cachelab_solution/trans.c",
		"/Users/yuyanzhang/Desktop/bits.c",
		"/Users/yuyanzhang/Desktop/cmu - summer/cords-handout/hdict.h",
		"/Users/yuyanzhang/Desktop/cmu - summer/cords-handout/hdict.c",
		"/Users/yuyanzhang/Desktop/cmu - summer/cords-handout/cord-interface.h",
		"/Users/yuyanzhang/Desktop/key.txt",
		"/Users/yuyanzhang/Desktop/cmu - summer/cords-handout/cord-test.c",
		"/Users/yuyanzhang/Desktop/cmu - summer/cords-handout/README.txt",
		"/Users/yuyanzhang/Desktop/cmu - summer/cords-handout/cord.c",
		"/Users/yuyanzhang/Desktop/cmu - summer/datalab-handout/btest.c",
		"/Users/yuyanzhang/Desktop/UVa/4th year/Capstone/multitaskcox/gendata.R",
		"/Users/yuyanzhang/Desktop/UVa/4th year/Capstone/multitaskcox/test_multitask.R",
		"/Users/yuyanzhang/Desktop/Concrete_Data.xls",
		"/Users/yuyanzhang/Desktop/UVa/4th year/Capstone/multitaskcox/multitask_cox.R",
		"/Users/yuyanzhang/Desktop/RWorkshop/australian.dat",
		"/Users/yuyanzhang/Desktop/gameoflife/example.py",
		"/Users/yuyanzhang/Desktop/temp/strcmp.py"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"reviewleft",
			"gentext",
			"data_count",
			"tilesentence",
			"tile",
			"method",
			"length",
			"vectori",
			"dump",
			"stop",
			"lemma",
			"antibiotics target",
			"Tuberous Sclerosis",
			"Tuberous Sclerosis a genetic disease",
			"Is Tuberous Sclerosis a genetic disease",
			"Is Tuberous Sclerosis a genetic disease?",
			"517539e68ed59a060a000028",
			"?",
			"!",
			"body",
			"2",
			"feature_dict",
			"feature",
			"train_loss",
			"copy.copy",
			"best_dict",
			"test_dict",
			"value_dict",
			"gradient",
			"batch_size",
			"batch",
			"outputs",
			"loss",
			"target",
			"print",
			"best_dict",
			"outputs",
			"full",
			"z",
			".p",
			"train_loss",
			"forward",
			"done",
			"expected_crossEnt_softMax_x_z",
			"TODO",
			"X",
			"instance",
			"got",
			"l",
			"XManFunctions",
			"inputDict",
			"todo",
			"to",
			"num_hid",
			"hum_hid",
			"num_hid",
			"param",
			"function",
			"EVAL",
			"function",
			"build",
			"param",
			"TODO",
			"pass",
			"print",
			"-0.00759551",
			"-0.007596",
			"0.125236",
			"TODO",
			"tolerance",
			"TODO",
			"rankAnswer",
			"doSetRan",
			"answerCandidate",
			"question",
			"ranker",
			"composite",
			"meningioma",
			"meningioma.",
			"meningioma risk",
			"meningioma",
			"meningioma risk",
			"body",
			"ideal_answer",
			"ideal",
			"print",
			"y_to_i",
			"x_list",
			"y_list",
			"label_dict",
			"label",
			"lab",
			"other",
			"Species",
			"Place",
			"Work",
			"Person",
			"x_list",
			"x_list[j]",
			"lable_dict",
			"lab le",
			"k",
			"7KPBkxAOEtb3QeIL9PEErg",
			"unique_word",
			"unique",
			"distinct",
			"Y_class",
			"sep",
			"986690",
			"Group",
			"Join",
			"retaining",
			"w_count_test",
			"word_token",
			"join",
			"replace_None",
			"Replace_None",
			"Replace",
			"replace",
			"replace_none",
			"replace",
			"lable",
			"Y_class",
			"outer",
			"j",
			"Y_W_count",
			"replace_None",
			"replace"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"delete_cache",
			"process_trace",
			"get_tag",
			"get_set_index",
			"parse_param",
			"new_cache",
			"my_cache",
			"node",
			"node[9]"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "pipeline.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Desktop/CMU/10605/hw4/starter_code/mlp.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 185.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
